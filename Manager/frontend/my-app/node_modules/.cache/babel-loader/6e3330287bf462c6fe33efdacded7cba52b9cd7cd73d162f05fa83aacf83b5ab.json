{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayushman Baghel\\\\ML\\\\Manager\\\\frontend\\\\my-app\\\\src\\\\components\\\\register.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [username, setuser] = useState(\"\");\n  const [password, setpass] = useState(\"\");\n  async function Handlesubmit(evnt) {\n    evnt.preventDefault();\n    const response = await fetch('http://localhost:4000/register', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (response.status === 200) {\n      alert('registration successful');\n    } else {\n      alert('registration failed');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"register\",\n    onSubmit: Handlesubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"username\",\n      name: \"username\",\n      value: username,\n      onChange: evnt => setuser(evnt.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: evnt => setpass(evnt.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 12\n  }, this);\n}\n_s(Register, \"xEAkfN4A6vhLtfNnIyYpuQ2XQCc=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Register","_s","username","setuser","password","setpass","Handlesubmit","evnt","preventDefault","response","fetch","method","body","JSON","stringify","headers","status","alert","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","name","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Ayushman Baghel/ML/Manager/frontend/my-app/src/components/register.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction Register(){\r\n    const [username,setuser]=useState(\"\");\r\n    const [password,setpass]=useState(\"\");\r\n\r\n    async function Handlesubmit(evnt) {\r\n        evnt.preventDefault();\r\n        const response = await fetch('http://localhost:4000/register', {\r\n          method: 'POST',\r\n          body: JSON.stringify({username,password}),\r\n          headers: {'Content-Type':'application/json'},\r\n        });\r\n        if (response.status === 200) {\r\n          alert('registration successful');\r\n        } else {\r\n          alert('registration failed');\r\n        }\r\n      }\r\n    return <form className=\"register\" onSubmit={Handlesubmit}>\r\n    <h1>Register</h1>\r\n    <input type=\"text\" placeholder=\"username\" name=\"username\" value={username} onChange={evnt => setuser(evnt.target.value) } required></input>\r\n    <input type=\"password\" placeholder=\"password\" name=\"password\" value={password} onChange={evnt => setpass(evnt.target.value)} required></input>\r\n    <button>Register</button>\r\n</form>;\r\n}\r\n\r\nexport default Register;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAACC,OAAO,CAAC,GAACN,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACO,QAAQ,EAACC,OAAO,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EAErC,eAAeS,YAAYA,CAACC,IAAI,EAAE;IAC9BA,IAAI,CAACC,cAAc,CAAC,CAAC;IACrB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;MAC7DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACZ,QAAQ;QAACE;MAAQ,CAAC,CAAC;MACzCW,OAAO,EAAE;QAAC,cAAc,EAAC;MAAkB;IAC7C,CAAC,CAAC;IACF,IAAIN,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;MAC3BC,KAAK,CAAC,yBAAyB,CAAC;IAClC,CAAC,MAAM;MACLA,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF;EACF,oBAAOlB,OAAA;IAAMmB,SAAS,EAAC,UAAU;IAACC,QAAQ,EAAEb,YAAa;IAAAc,QAAA,gBACzDrB,OAAA;MAAAqB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBzB,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,UAAU;MAACC,IAAI,EAAC,UAAU;MAACC,KAAK,EAAE1B,QAAS;MAAC2B,QAAQ,EAAEtB,IAAI,IAAIJ,OAAO,CAACI,IAAI,CAACuB,MAAM,CAACF,KAAK,CAAG;MAACG,QAAQ;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3IzB,OAAA;MAAO0B,IAAI,EAAC,UAAU;MAACC,WAAW,EAAC,UAAU;MAACC,IAAI,EAAC,UAAU;MAACC,KAAK,EAAExB,QAAS;MAACyB,QAAQ,EAAEtB,IAAI,IAAIF,OAAO,CAACE,IAAI,CAACuB,MAAM,CAACF,KAAK,CAAE;MAACG,QAAQ;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9IzB,OAAA;MAAAqB,QAAA,EAAQ;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AACP;AAACvB,EAAA,CAvBQD,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AAyBjB,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}