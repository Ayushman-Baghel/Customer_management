{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayushman Baghel\\\\ML\\\\Manager\\\\frontend\\\\my-app\\\\src\\\\components\\\\newuser.jsx\",\n  _s = $RefreshSig$();\nfunction NewUser() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_c = NewUser;\nimport React, { useState } from 'react';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction New() {\n  _s();\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [pendingAmount, setPendingAmount] = useState('');\n  const [photo, setPhoto] = useState(null);\n  async function handleSubmit(e) {\n    e.preventDefault();\n    // Upload image\n    const formData = new FormData();\n    formData.append('photo', photo);\n    const imageRes = await fetch('/api/upload', {\n      method: 'POST',\n      body: formData\n    });\n    const {\n      imageUrl\n    } = await imageRes.json();\n\n    // Save customer\n    const customerData = {\n      name,\n      phone,\n      pendingAmount,\n      photo: imageUrl\n    };\n    await fetch('/api/customers', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(customerData)\n    });\n\n    // Clear form or show success message\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Phone\",\n      value: phone,\n      onChange: e => setPhone(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Pending Amount\",\n      value: pendingAmount,\n      onChange: e => setPendingAmount(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setPhoto(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(New, \"2hxkz5Z8xNAbwkLG0BWsnHO9S3M=\");\n_c2 = New;\nexport default NewUser;\nvar _c, _c2;\n$RefreshReg$(_c, \"NewUser\");\n$RefreshReg$(_c2, \"New\");","map":{"version":3,"names":["NewUser","_jsxDEV","_Fragment","_c","React","useState","Fragment","jsxDEV","New","_s","name","setName","phone","setPhone","pendingAmount","setPendingAmount","photo","setPhoto","handleSubmit","e","preventDefault","formData","FormData","append","imageRes","fetch","method","body","imageUrl","json","customerData","headers","JSON","stringify","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","files","_c2","$RefreshReg$"],"sources":["C:/Users/Ayushman Baghel/ML/Manager/frontend/my-app/src/components/newuser.jsx"],"sourcesContent":["\r\nfunction NewUser(){\r\n    return (<></>);\r\n}\r\nimport React, { useState } from 'react';\r\n\r\nfunction New() {\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [pendingAmount, setPendingAmount] = useState('');\r\n  const [photo, setPhoto] = useState(null);\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    // Upload image\r\n    const formData = new FormData();\r\n    formData.append('photo', photo);\r\n    const imageRes = await fetch('/api/upload', {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n    const { imageUrl } = await imageRes.json();\r\n\r\n    // Save customer\r\n    const customerData = { name, phone, pendingAmount, photo: imageUrl };\r\n    await fetch('/api/customers', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(customerData),\r\n    });\r\n\r\n    // Clear form or show success message\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" placeholder=\"Name\" value={name} onChange={(e) => setName(e.target.value)} />\r\n      <input type=\"text\" placeholder=\"Phone\" value={phone} onChange={(e) => setPhone(e.target.value)} />\r\n      <input type=\"number\" placeholder=\"Pending Amount\" value={pendingAmount} onChange={(e) => setPendingAmount(e.target.value)} />\r\n      <input type=\"file\" onChange={(e) => setPhoto(e.target.files[0])} />\r\n      <button type=\"submit\">Add Customer</button>\r\n    </form>\r\n  );\r\n}\r\n\r\n\r\nexport default NewUser;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}