{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayushman Baghel\\\\ML\\\\Manager\\\\frontend\\\\my-app\\\\src\\\\components\\\\register.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [username, setuser] = useState(\"\");\n  const [password, setpass] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    ons: true,\n    className: \"register\",\n    action: \"http://localhost:4000/register\",\n    method: \"POST\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"username\",\n      name: \"username\",\n      value: username,\n      onChange: evnt => setuser(evnt.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: evnt => setpass(evnt.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this);\n}\n_s(Register, \"xEAkfN4A6vhLtfNnIyYpuQ2XQCc=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Register","_s","username","setuser","password","setpass","ons","className","action","method","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","name","value","onChange","evnt","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Ayushman Baghel/ML/Manager/frontend/my-app/src/components/register.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction Register(){\r\n    const [username,setuser]=useState(\"\");\r\n    const [password,setpass]=useState(\"\");\r\n\r\n    \r\n    return <form ons className=\"register\" action=\"http://localhost:4000/register\" method=\"POST\" >\r\n    <h1>Register</h1>\r\n    <input type=\"text\" placeholder=\"username\" name=\"username\" value={username} onChange={evnt => setuser(evnt.target.value) } required></input>\r\n    <input type=\"password\" placeholder=\"password\" name=\"password\" value={password} onChange={evnt => setpass(evnt.target.value)} required></input>\r\n    <button>Register</button>\r\n</form>;\r\n}\r\n\r\nexport default Register;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAACC,OAAO,CAAC,GAACN,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACO,QAAQ,EAACC,OAAO,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EAGrC,oBAAOE,OAAA;IAAMO,GAAG;IAACC,SAAS,EAAC,UAAU;IAACC,MAAM,EAAC,gCAAgC;IAACC,MAAM,EAAC,MAAM;IAAAC,QAAA,gBAC3FX,OAAA;MAAAW,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBf,OAAA;MAAOgB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,UAAU;MAACC,IAAI,EAAC,UAAU;MAACC,KAAK,EAAEhB,QAAS;MAACiB,QAAQ,EAAEC,IAAI,IAAIjB,OAAO,CAACiB,IAAI,CAACC,MAAM,CAACH,KAAK,CAAG;MAACI,QAAQ;IAAA;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3If,OAAA;MAAOgB,IAAI,EAAC,UAAU;MAACC,WAAW,EAAC,UAAU;MAACC,IAAI,EAAC,UAAU;MAACC,KAAK,EAAEd,QAAS;MAACe,QAAQ,EAAEC,IAAI,IAAIf,OAAO,CAACe,IAAI,CAACC,MAAM,CAACH,KAAK,CAAE;MAACI,QAAQ;IAAA;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9If,OAAA;MAAAW,QAAA,EAAQ;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AACP;AAACb,EAAA,CAXQD,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAajB,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}