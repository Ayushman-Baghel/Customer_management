{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayushman Baghel\\\\ML\\\\Manager\\\\frontend\\\\my-app\\\\src\\\\components\\\\customer_transactions.jsx\",\n  _s = $RefreshSig$();\nfunction Customer_Transaction() {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2,\n    columnNumber: 11\n  }, this);\n}\n_c = Customer_Transaction;\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionList() {\n  _s();\n  const {\n    customerId\n  } = useParams(); // Extract the customerId from the URL\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    async function fetchTransactions() {\n      const response = await fetch(`http://localhost:4000/transactions/${customerId}`, {\n        credentials: 'include'\n      });\n      const data = await response.json();\n      setTransactions(data);\n    }\n    fetchTransactions();\n  }, [customerId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transactions for Customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Amount: \\u20B9\", transaction.amount, \", Date: \", new Date(transaction.date).toLocaleString()]\n      }, transaction._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(TransactionList, \"YJvgni8rqbWfmr5b/IzXDncS6L8=\", false, function () {\n  return [useParams];\n});\n_c2 = TransactionList;\nexport default Customer_Transaction;\nvar _c, _c2;\n$RefreshReg$(_c, \"Customer_Transaction\");\n$RefreshReg$(_c2, \"TransactionList\");","map":{"version":3,"names":["Customer_Transaction","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","useParams","useEffect","useState","jsxDEV","TransactionList","_s","customerId","transactions","setTransactions","fetchTransactions","response","fetch","credentials","data","json","map","transaction","amount","Date","date","toLocaleString","_id","_c2","$RefreshReg$"],"sources":["C:/Users/Ayushman Baghel/ML/Manager/frontend/my-app/src/components/customer_transactions.jsx"],"sourcesContent":["function Customer_Transaction(){\r\n    return<h1>hello</h1>;\r\n}\r\nimport { useParams } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction TransactionList() {\r\n  const { customerId } = useParams();  // Extract the customerId from the URL\r\n  const [transactions, setTransactions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchTransactions() {\r\n      const response = await fetch(`http://localhost:4000/transactions/${customerId}`, {\r\n        credentials: 'include',\r\n      });\r\n      const data = await response.json();\r\n      setTransactions(data);\r\n    }\r\n    \r\n    fetchTransactions();\r\n  }, [customerId]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Transactions for Customer</h2>\r\n      <ul>\r\n        {transactions.map(transaction => (\r\n          <li key={transaction._id}>\r\n            Amount: â‚¹{transaction.amount}, Date: {new Date(transaction.date).toLocaleString()}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Customer_Transaction;"],"mappings":";;AAAA,SAASA,oBAAoBA,CAAA,EAAE;EAC3B,oBAAMC,OAAA;IAAAC,QAAA,EAAI;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AACxB;AAACC,EAAA,GAFQP,oBAAoB;AAG7B,SAASQ,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAV,OAAA;AAE5C,SAASW,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAW,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAE;EACrC,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd,eAAeQ,iBAAiBA,CAAA,EAAG;MACjC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsCL,UAAU,EAAE,EAAE;QAC/EM,WAAW,EAAE;MACf,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClCN,eAAe,CAACK,IAAI,CAAC;IACvB;IAEAJ,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACH,UAAU,CAAC,CAAC;EAEhB,oBACEb,OAAA;IAAAC,QAAA,gBACED,OAAA;MAAAC,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClCL,OAAA;MAAAC,QAAA,EACGa,YAAY,CAACQ,GAAG,CAACC,WAAW,iBAC3BvB,OAAA;QAAAC,QAAA,GAA0B,gBACf,EAACsB,WAAW,CAACC,MAAM,EAAC,UAAQ,EAAC,IAAIC,IAAI,CAACF,WAAW,CAACG,IAAI,CAAC,CAACC,cAAc,CAAC,CAAC;MAAA,GAD1EJ,WAAW,CAACK,GAAG;QAAA1B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEpB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACO,EAAA,CA5BQD,eAAe;EAAA,QACCJ,SAAS;AAAA;AAAAsB,GAAA,GADzBlB,eAAe;AA+BxB,eAAeZ,oBAAoB;AAAC,IAAAO,EAAA,EAAAuB,GAAA;AAAAC,YAAA,CAAAxB,EAAA;AAAAwB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}